import{am as g}from"./BPRHiPFR.js";async function $(){if($ctx.profile.name)return;const{authority:e,client_id:a,redirect_uri:o}={redirect_uri:`${location.origin}${location.pathname}`.replace("/logout","/login"),...$cfg.auth};if(!e)return $ctx.profile={name:"John Doe",email:"john.doe@neoxam.com",role:"user"},g("/");if(sessionStorage.id_token)return;const t=new URLSearchParams(location.search),u=t.get("code"),m=t.get("state");if(u||await w(),t.get("error"))throw new Error(t.get("error"));await S(u,m);async function w(){let l="/protocol/openid-connect/auth";e.includes("microsoftonline")&&(l="/oauth2/v2.0/authorize"),sessionStorage.state=p(16),sessionStorage.verifier=p(32),sessionStorage.challenge=await i(sessionStorage.verifier);const d=new URL(`${e}${l}`,location.origin);d.search=new URLSearchParams({client_id:a,redirect_uri:o,response_type:"code",scope:"openid",state:sessionStorage.state,code_challenge:sessionStorage.challenge,code_challenge_method:"S256"}).toString(),location.href=d;function s(r){return btoa(String.fromCharCode.apply(null,new Uint8Array(r))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function p(r){const c=new Uint8Array(r);return crypto.getRandomValues(c),s(c)}async function i(r){const f=new TextEncoder().encode(r),n=await crypto.subtle.digest("SHA-256",f),h=new Uint8Array(n);return s(h)}}async function S(l,d){let s="/protocol/openid-connect/token";if(e.includes("microsoftonline")&&(s="/oauth2/v2.0/token"),sessionStorage.state&&sessionStorage.state!==d)throw new Error("CRSF verification failed");const i=await(await fetch(`${e}${s}`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:a,redirect_uri:o,response_type:"code",grant_type:"authorization_code",code:l,code_verifier:sessionStorage.verifier})})).json();if(i.error)throw new Error(i.error_description);const{id_token:r,access_token:c,refresh_token:f}=i;sessionStorage.id_token=r,sessionStorage.access_token=c,sessionStorage.refresh_token=f,delete sessionStorage.state,delete sessionStorage.verifier,delete sessionStorage.challenge,history.replaceState({},"",location.pathname);const n=y=>JSON.parse(atob(sessionStorage[`${y}_token`].split(".")[1]));$ctx.profile={id:n("access").sub,name:n("access").name||n("access").preferred_username,email:n("access").upn||n("access").email},$ctx.profile.role||($ctx.profile.role="user"),$ctx.profile.email&&($ctx.profile.picture=$ctx.profile.email.gravatar());const h=new URLSearchParams(location.search).get("redirect")||"/";g(h)}}async function k(){const{authority:e,client_id:a}={...$cfg.auth},{access_token:o,refresh_token:t}=sessionStorage;$ctx.profile={},e&&(e.includes("keycloak")&&(await fetch(`${e}/protocol/openid-connect/logout`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:a,refresh_token:t})}),await fetch(`${e}/protocol/openid-connect/revoke`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:a,token:t,token_type_hint:"refresh_token"})}),await fetch(`${e}/protocol/openid-connect/revoke`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:a,token:o,token_type_hint:"access_token"})})),e.includes("microsoftonline"))}export{k as a,$ as l};
